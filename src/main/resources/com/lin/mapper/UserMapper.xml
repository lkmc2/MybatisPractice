<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lin.mapper.UserMapper">

    <!--返回值实体类映射关系Map-->
    <resultMap id="userMap" type="com.lin.model.SysUser">
        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email"/>
        <result property="userInfo" column="user_info"/>
        <result property="headImg" column="head_img" jdbcType="BLOB"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="selectById" resultMap="userMap">
        select * from sys_user where id = #{id}
    </select>

    <!--如果不使用resultMap，就要为每个表字段设置与实体类中一样的别名-->
    <select id="selectAll" resultType="com.lin.model.SysUser">
        select
            user_name userName,
            user_password userPassword,
            user_email userEmail,
            user_info userInfo,
            head_img headImg,
            create_time createTime
        from sys_user
    </select>

    <select id="selectRolesByUserId" resultType="com.lin.model.SysRole">
        select
          r.id,
          r.role_name roleName,
          r.enabled,
          r.create_by createBy,
          r.create_time createTime
        from sys_user u
            inner join sys_user_role ur on u.id = ur.user_id
            inner join sys_role r on ur.role_id = r.id
        where u.id = #{userId}
    </select>

    <select id="selectRolesAndUserNameByUserId" resultType="com.lin.model.SysRoleExtend">
        select
            r.id,
            r.role_name roleName,
            r.enabled,
            r.create_by createBy,
            r.create_time createTime,
            u.user_name userName
        from sys_user u
             inner join sys_user_role ur on u.id = ur.user_id
             inner join sys_role r on ur.role_id = r.id
        where u.id = #{userId}
    </select>

    <!--u.user_name as "user.userName"是把该字段赋值给类中的user属性的userName字段-->
    <select id="selectRolesAndUserNameByUserId2" resultType="com.lin.model.SysRole">

        select
            r.id,
            r.role_name roleName,
            r.enabled,
            r.create_by createBy,
            r.create_time createTime,
            u.user_name as "user.userName",
            u.user_email as "user.userEmail"
        from sys_user u
             inner join sys_user_role ur on u.id = ur.user_id
             inner join sys_role r on ur.role_id = r.id
        where u.id = #{userId}
    </select>

    <insert id="insert">
        insert into sys_user (
              id, user_name, user_password,
              user_email, user_info,
              head_img, create_time
        )
        values (
             #{id}, #{userName}, #{userPassword},
             #{userEmail}, #{userInfo},
             #{headImg, jdbcType=BLOB},#{createTime, jdbcType=TIMESTAMP}
         )
    </insert>

    <!--配置useGeneratedKeys为true，会把数据库的主键的值设置到keyProperty指定的id属性上-->
    <insert id="insert2" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user (
            user_name, user_password,
            user_email, user_info,
            head_img, create_time
        )
        values (
           #{userName}, #{userPassword},
           #{userEmail}, #{userInfo},
           #{headImg, jdbcType=BLOB},#{createTime, jdbcType=TIMESTAMP}
        )
    </insert>

    <!--配置useGeneratedKeys为true，会把数据库的主键的值设置到keyProperty指定的id属性上-->
    <!--因为mysql中insert成功之后才能获取到主键值，所以order是after-->
    <!--select LAST_INSERT_ID() 获取上一次插入的ID，每个数据库使用的函数都不一样-->
    <insert id="insert3">
        insert into sys_user (
            user_name, user_password,
            user_email, user_info,
            head_img, create_time
        )
        values (
           #{userName}, #{userPassword},
           #{userEmail}, #{userInfo},
           #{headImg, jdbcType=BLOB},#{createTime, jdbcType=TIMESTAMP}
       )
       <selectKey keyColumn="id" resultType="long" keyProperty="id" order="AFTER">
           select LAST_INSERT_ID()
       </selectKey>
    </insert>

    <update id="updateById">
        update sys_user
        set user_name = #{userName},
            user_password = #{userPassword},
            user_email = #{userEmail},
            user_info = #{userInfo},
            head_img = #{headImg, jdbcType=BLOB},
            create_time = #{createTime, jdbcType=TIMESTAMP}
        where id = #{id}
    </update>

    <delete id="deleteById">
        delete from sys_user where id = #{id}
    </delete>

    <select id="selectRolesByUserIdAndRoleEnabled" resultType="com.lin.model.SysRole">
        select
            r.id,
            r.role_name roleName,
            r.enabled,
            r.create_by createBy,
            r.create_time createTime
        from sys_user u
        inner join sys_user_role ur on u.id = ur.user_id
        inner join sys_role r on ur.role_id = r.id
        where u.id = #{userId} and r.enabled = #{enabled}
    </select>

    <select id="selectRolesByUserAndRole" resultType="com.lin.model.SysRole">
        select
            r.id,
            r.role_name roleName,
            r.enabled,
            r.create_by createBy,
            r.create_time createTime
        from sys_user u
                 inner join sys_user_role ur on u.id = ur.user_id
                 inner join sys_role r on ur.role_id = r.id
        where u.id = #{user.id} and r.enabled = #{role.enabled}
    </select>

    <!--property != null所有属性都可以使用，property != ''只有字符串可以使用，条件间的连接符使用and或or-->
    <select id="selectByUser" resultType="com.lin.model.SysUser">
        select
           id,
           user_name userName,
           user_password userPassword,
           user_email userEmail,
           user_info userInfo,
           head_img headImg,
           create_time createTime
        from sys_user
        where 1 = 1
        <if test="userName != null and userName != ''">
            and user_name like concat('%', #{userName}, '%')
        </if>
        <if test="userEmail != null and userEmail != ''">
            and user_email = #{userEmail}
        </if>
    </select>

</mapper>